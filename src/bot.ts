// src/bot.ts

import 'dotenv/config'
import { Bot } from 'grammy'
import { sessionMiddleware } from './middleware/session'
import { MyContext } from './types'
import { loadLocales, t } from './i18n'

// ‚Äî –∫–æ–º–∞–Ω–¥—ã ‚Äî
import { startCommand } from './commands/start'
import { helpCommand } from './commands/help'
import { productsCommand } from './commands/products'
import { addCommand } from './commands/add'
import { removeCommand } from './commands/remove'
import { clearCommand } from './commands/clear'
import { uploadCommand } from './commands/upload'
import {
    recipesCommand,
    recipesPageHandler,
} from './commands/recipes'
import {
    favoritesCommand,
    favoritesPageHandler,
} from './commands/favorites'
import menu from './commands/menu'

// ‚Äî inline‚Äë–¥–µ–π—Å—Ç–≤–∏—è –∏–∑ recipeActions –∏ uploadActions ‚Äî
import {
    showRecipeAction,
    saveRecipeAction,
    deleteRecipeAction,
} from './commands/recipeActions'
import {
    applyAddAction,
    applyReplaceAction,
} from './commands/uploadActions'

// ‚Äî prompt‚Äë—Ä–µ–∂–∏–º –¥–ª—è add/remove –ø—Ä–æ–¥—É–∫—Ç–æ–≤ ‚Äî
import {
    promptAddAction,
    promptRemoveAction,
    productPromptTextHandler,
    productPromptPageHandler,
    productPromptFinalHandler,
} from './commands/productPromptActions'

// –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
loadLocales()

const bot = new Bot<MyContext>(process.env.BOT_TOKEN!)

// –ø–æ–¥–∫–ª—é—á–∞–µ–º —Å–µ—Å—Å–∏—é –¥–æ –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
bot.use(sessionMiddleware)

// === —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ ===
bot.command('start', startCommand)
bot.command('help', helpCommand)
bot.command('products', productsCommand)
// bot.command('add', addCommand)
// bot.command('remove', removeCommand)
bot.command('clear', clearCommand)
bot.command('upload', async (ctx) => {
    await ctx.reply(t(ctx, 'upload.promptPhoto'))
})
bot.on('message:photo', uploadCommand)
bot.command('recipes', recipesCommand)
bot.command('favorites', favoritesCommand)
bot.command('menu', menu)

// === –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ===
bot.on('message:text', async (ctx, next) => {
    const text = ctx.message!.text!
    if (text === t(ctx, 'keyboard.products')) {
        return productsCommand(ctx)
    }
    if (text === t(ctx, 'keyboard.recipes')) {
        return recipesCommand(ctx)
    }
    if (text === t(ctx, 'keyboard.favorites')) {
        return favoritesCommand(ctx)
    }
    // –Ω–∏ –æ–¥–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–æ–¥–æ—à–ª–∞ ‚Äî –ø–µ—Ä–µ–¥–∞—ë–º –¥–∞–ª—å—à–µ
    return next()
})

// === inline‚Äë–¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–æ–≤ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ ===
bot.callbackQuery(/^show_\d+$/, showRecipeAction)
bot.callbackQuery(/^save_\d+$/, saveRecipeAction)
bot.callbackQuery(/^delete_\d+$/, deleteRecipeAction)
bot.callbackQuery('apply_add', applyAddAction)
bot.callbackQuery('apply_replace', applyReplaceAction)
bot.callbackQuery(/^recipes_page_\d+$/, recipesPageHandler)
bot.callbackQuery(/^favorites_page_\d+$/, favoritesPageHandler)

// === prompt‚Äë—Ä–µ–∂–∏–º –¥–ª—è add/remove –ø—Ä–æ–¥—É–∫—Ç–æ–≤ ===
bot.callbackQuery('prompt_add', promptAddAction)
bot.callbackQuery('prompt_remove', promptRemoveAction)
bot.on('message:text', productPromptTextHandler)
bot.callbackQuery(/^page_(add|remove)_(\d+)$/, productPromptPageHandler)
bot.callbackQuery(/^(add|remove)_.+$/, productPromptFinalHandler)

// === –≥–ª–æ–±–∞–ª—å–Ω—ã–π catch ===
bot.catch(async (errCtx) => {
    console.error('Bot error:', errCtx.error)
    try {
        await errCtx.ctx.reply(t(errCtx.ctx, 'error.global'))
    } catch {}
})

// === –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.start()
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')
