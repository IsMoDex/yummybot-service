import { Context } from 'grammy';
import { removeProductFromUser } from '../database/queries/product';

export async function removeCommand(ctx: Context) {
    const telegramId = ctx.from?.id;
    const text = ctx.message?.text || '';
    const parts = text.split(' ');
    const productName = parts.slice(1).join(' ').trim().toLowerCase();

    if (!telegramId || !productName) {
        return ctx.reply('‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /remove <–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞>');
    }

    const result = await removeProductFromUser(telegramId, productName);

    if (result.success) {
        return ctx.reply(`üóëÔ∏è –ü—Ä–æ–¥—É–∫—Ç *${productName}* —É–¥–∞–ª—ë–Ω –∏–∑ –≤–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞.`, {
            parse_mode: 'Markdown',
        });
    } else if (result.reason === 'not_found') {
        return ctx.reply(`‚ö†Ô∏è –ü—Ä–æ–¥—É–∫—Ç *${productName}* –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ.`, {
            parse_mode: 'Markdown',
        });
    } else if (result.reason === 'not_in_list') {
        return ctx.reply(`‚ÑπÔ∏è –ü—Ä–æ–¥—É–∫—Ç–∞ *${productName}* –Ω–µ—Ç –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ.`, {
            parse_mode: 'Markdown',
        });
    }
}
