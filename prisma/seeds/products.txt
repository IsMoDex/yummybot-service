// prisma/seeds/01-products-and-translations.ts

import { PrismaClient } from '@prisma/client'
import * as emoji from 'node-emoji'         // импорт node-emoji :contentReference[oaicite:9]{index=9}
import { faker } from '@faker-js/faker'     // генерация доп. продуктов :contentReference[oaicite:10]{index=10}

export async function runProductsAndTranslations(prisma: PrismaClient) {
    // 1) Обязательные продукты
    const mandatoryProductIds = [
        'banana','beetroot','broccoli','cauliflower','lemon','onion','orange','peas',
        'potato','shallot','strawberry','sweetcorn','tomato','apple','apples','asparagus',
        'aubergine','bacon','bananas','bazlama','beef','blueberries','bread','butter',
        'carrot','carrots','cheese','chicken','chicken_breast','chocolate','chocolate chips',
        'corn','courgettes','cream','cream cheese','dates','eggs','flour','ginger','goat_cheese',
        'green beans','green bell pepper','green chilies','green_beans','ground_beef','ham',
        'heavy_cream','juice','lemons','lettuce','lime','mango','meat','milk','mineral water',
        'mushroom','mushrooms','olive','olives','parsley','peach','peppers','potatoes',
        'red bell pepper','red grapes','red onion','salami','sauce','sausage','shrimp',
        'spinach','spring onion','strawberries','sugar','sweet_potato','tomato paste',
        'tomatoes','yellow bell pepper','yoghurt'
    ]

    // 2) Генерируем 100 дополнительных продуктов
    const extraProductIds: string[] = Array.from({ length: 100 }).map(() =>
        faker.commerce.productName()                  // "Licensed Steel Shoes" :contentReference[oaicite:11]{index=11}
            .toLowerCase()
            .replace(/[^a-z\s]/g, '')
            .trim()
            .replace(/\s+/g, '_')
    )

    const allProductIds = [...mandatoryProductIds, ...extraProductIds]

    // 3) UPSERT продуктов (SQLite не поддерживает skipDuplicates в createMany) :contentReference[oaicite:12]{index=12}
    for (const id of allProductIds) {
        await prisma.product.upsert({
            where:  { id },
            create: { id },
            update: {},                              // пустой update для обхода отсутствия findOrCreate :contentReference[oaicite:13]{index=13}
        })
    }

    // 4) Сразу создаём переводы (en/ru) и добавляем эмодзи из node-emoji
    const ruMap: Record<string,string> = {
        banana: 'Банан', beetroot: 'Свёкла', broccoli: 'Брокколи',
        // … ваши переводы
    }
    const toTitleCase = (s: string) =>
        s.split(/[_ ]+/).map(w => w[0].toUpperCase() + w.slice(1)).join(' ')

    for (const productId of allProductIds) {
        const emojiChar = emoji.has(productId)      // проверяем наличие эмодзи :contentReference[oaicite:14]{index=14}
            ? emoji.get(productId)                    // получаем символ
            : null

        const nameEn = toTitleCase(productId)
        const nameRu = ruMap[productId] ?? nameEn

        // English
        await prisma.productTranslation.upsert({
            where: { productId_language: { productId, language: 'en' } },
            create: { productId, language: 'en', name: nameEn, emoji: emojiChar },
            update: { name: nameEn, emoji: emojiChar },
        })

        // Russian
        await prisma.productTranslation.upsert({
            where: { productId_language: { productId, language: 'ru' } },
            create: { productId, language: 'ru', name: nameRu, emoji: emojiChar },
            update: { name: nameRu, emoji: emojiChar },
        })
    }
}
